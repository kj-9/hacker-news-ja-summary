{
  "comments_id": "44802886",
  "rank": 2,
  "title": "TIL that You can spot base64 encoded JSON, certificates, and private keys",
  "link": "https://ergaster.org/til/base64-encoded-json/",
  "created_date": "2025-08-05T20:13:48.337565",
  "comments_summary": "この記事は、Base64エンコードされた文字列を特定することについてです。\n\n## Base64エンコードされた文字列のパターン\n\n*   Base64エンコードされた文字列には、特定のパターンが存在する。\n*   `ey`や`LS`などの文字列は、Base64エンコードされたJSONでよく見られる。\n*   `MI`は、ASN.1 DERエンコードされたオブジェクトの先頭に現れる。\n*   アクセス・トークンをツールにコピー＆ペーストしていると、すぐにパターンに気づくようになる。\n\n## JWT（JSON Web Token）\n\n*   JWTは、Base64エンコードされたJSONペイロードを使用している。\n*   JWTは、`ey`という音に聞こえるという人もいる。\n\n## その他\n\n*   バイナリ・ブロブを16進エディタで見ていると、特定の文字シーケンスに慣れてくる。\n*   Base64エンコードされたYAMLファイルは、ドキュメント・マーカーがあれば`LS`で始まる。\n*   PEMフォーマットは、ヘッダーとフッターを除いて、Base64でエンコードされている。\n*   文字列を難読化して、Base64エンコードされた文字列がすぐにわからないようにすることが推奨される。\n\n## まとめ\n\nこの記事では、Base64エンコードされた文字列を特定するためのパターンと、それらが見られる一般的なコンテキスト（JWT、ASN.1 DERエンコードなど）について解説されています。特定の文字列パターンを認識することで、セキュリティ専門家や開発者は、システム内のデータをより迅速に分析し、潜在的な問題を特定することができます。"
}