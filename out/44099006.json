{
  "comments_id": "44099006",
  "rank": 6,
  "title": "Hacker News now runs on top of Common Lisp",
  "link": "https://lisp-journey.gitlab.io/blog/hacker-news-now-runs-on-top-of-common-lisp/",
  "created_date": "2025-05-26T20:12:51.554880",
  "comments_summary": "この記事は、Hacker News (HN) が Common Lisp で Arc ランタイムを再実装したこと、およびそれに関連する議論についてまとめたものです。\n\n## ダークモードの要望\n\n*   ユーザーは HN に公式のダークモードが実装されることを期待しています。\n*   Tampermonkey などのツールでユーザー自身がスタイルシートを適用する方法もありますが、サイトの変更に対応してメンテナンスするのは難しいという意見があります。\n*   ブラウザにダークモード機能が組み込まれることが理想的ですが、CSS のカスケードにより、ユーザーのスタイルシートがウェブサイトの機能を壊す可能性があるという懸念もあります。\n*   一部の RSS リーダーの埋め込みブラウザでは、クライアントサイドのパッチが機能しないため、サイト側の CSS が必要です。\n\n## Common Lisp とパフォーマンス\n\n*   SBCL (Steel Bank Common Lisp) は非常に高速であり、Racket よりもパフォーマンスが高いという意見があります。\n*   HN はシングルコアで動作していましたが、Clarc によりマルチコアでの実行が容易になります。\n*   CPU が高速であるため、基本的な最適化を行うことで、少数の CPU コアで多数のユーザーに対応できます。\n\n## セキュリティとアンチアビューズ対策\n\n*   HN のコードベースには、公開すると悪用される可能性のあるアンチアビューズ対策が含まれています。\n*   セキュリティの原則（ケルクホフスの原則）に反するという意見もありますが、コストを攻撃者と防御者の間で分散させることでセキュリティを強化できるという反論もあります。\n*   アンチアビューズ対策は、ネットワークセキュリティとは異なり、スパムアカウントの作成などを防ぐためのものです。\n\n## HN の設計思想\n\n*   HN は「Worse is better」の原則の好例であり、必要最小限の機能に絞り、強力なモデレーションによって成り立っています。\n*   Slashdot のような豊富な機能は持っていませんが、そのシンプルさが HN の強みとなっています。\n*   HN は収益を上げる必要がないため、広告が控えめで、ユーザーエクスペリエンスを重視した設計になっています。\n*   過剰な技術に依存せず、人的な入力に依存している点が HN の特徴であり、成功の要因となっています。\n\n## まとめ\n\nHacker News が Common Lisp で Arc ランタイムを再実装したことは、パフォーマンスの向上やマルチコア対応など、多くのメリットをもたらす可能性があります。また、ダークモードの実装やアンチアビューズ対策など、今後の HN の開発に関する議論も活発に行われています。HN の設計思想である「Worse is better」や、強力なモデレーションによって、シンプルながらも質の高いコミュニティが維持されていることが、HN の成功の要因であると考えられます。"
}