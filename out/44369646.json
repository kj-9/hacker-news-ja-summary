{
  "comments_id": "44369646",
  "rank": 3,
  "title": "Forbidden secrets of ancient X11 scaling technology revealed",
  "link": "https://flak.tedunangst.com/post/forbidden-secrets-of-ancient-X11-scaling-technology-revealed",
  "created_date": "2025-06-24T20:13:47.125024",
  "comments_summary": "この記事は、X11でのDPIスケーリングの課題と、OpenGLを使ってそれを実現する方法について解説しています。\n\n## DPIスケーリングの課題\n\nX11の標準的なAPI（Xlib）は、スケーリングを考慮せずに生のピクセル座標で動作する関数しか提供していません。そのため、既存の多くのアプリケーションはスケーリングに対応していません。また、様々なGUIライブラリや、アイコン、テキスト、線の描画方法の違いも、スケーリングの課題を複雑にしています。\n\n## Waylandのスケーリング方法\n\nOSXで普及し、Linuxでコピーされた「2倍のスケールで描画し、縮小する」方式は、パフォーマンスの低下と出力のぼやけを引き起こします。Waylandでは、クライアントに「MxNピクセルのバッファにレンダリングし、出力のスケーリングファクタはX.Yである」と指示することで、クライアントが最適な方法でスケーリングを処理できるようにすることが望ましいと提案されています。\n\n## X11のデバイス依存性\n\nX11はピクセル座標でグラフィックスを記述するため、デバイスに依存します。異なる解像度の画面ではグラフィックスのサイズが異なり、ピクセルのアスペクト比も考慮する必要があります。また、XFillRectangleとXDrawRectangleの挙動の違いなど、描画に関する奇妙なルールも存在します。\n\n## まとめ\n\nX11でのDPIスケーリングは、APIの制限や既存のコードとの互換性の問題から難しい課題です。OpenGLを使用することで、より低いレベルで画面とやり取りし、スケーリングを実現できますが、これはX11の標準的な機能を使用しない回避策と言えます。Waylandでは、クライアントにスケーリングを委ねることで、より柔軟なスケーリングが期待されています。"
}