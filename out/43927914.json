{
  "comments_id": "43927914",
  "rank": 6,
  "title": "Notes on rolling out Cursor and Claude Code",
  "link": "https://ghiculescu.substack.com/p/nobody-codes-here-anymore",
  "created_date": "2025-05-08T20:13:31.161677",
  "comments_summary": "Hacker Newsのスレッドでは、大規模なAIコード支援の導入経験について議論されています。\n\n## AIコード支援による野心の解放\n\nAIコード支援ツール「Brokk」の開発者は、AIによる支援がなければ考えられなかったような、動的言語のための独自の型推論エンジンの作成を検討していると述べています。\n\n## 優れたDevOpsの実践がAIコーディングを容易にする\n\nAIコーディングエージェントは、これまで面倒で使用することが非現実的だった多くのツールを非常に役立つものにしています。テストをローカルで実行できるようにすることで、コード記述後にエージェントにテストの実行と修正を依頼できるようになります。マイナーな改善に対するペイオフも大きくなっています。\n\n## エージェントによるコードのコメントの多用\n\nエージェントによるコードの醜さの最も一般的な原因は、コメントの多用であるという苦情が寄せられています。コメントはLLMがより良いコードを書くのに役立ち、コメントを削除することでコードを精査し、受け入れることができます。\n\n## AIツールの使用を忘れること\n\nAIツールを使用することを忘れて手動でタスクを実行してしまうことがよくあります。これは、AIがそれほど速くなかったり、プロンプトを考えるのにコストがかかったり、フローに乗っている場合に起こります。\n\n## 改善の余地\n\nリンティング、プリティファイ、高速なテスト実行は不可欠です。AIは古いReactパターンを使用することが多く、修正が必要です。美しいコードを書けるエージェントはまだありません。AIは、それが動作する限り、数百行のif文を気にしません。人間にとって使いやすいコードにするには、数回のフィードバックと調整が必要です。フィードバックループを改善し、「明白な」問題の頻度を減らすことで、ワンショットの品質が向上し、生産性の向上がさらに高まります。\n\n## まとめ\n\n全体として、スレッドでは、AIコード支援ツールの導入による利点と課題について議論されています。AIコード支援は、野心の解放、DevOpsの実践の改善、生産性の向上に役立ちますが、コメントの多用、AIツールの使用を忘れること、美しいコードを書けないことなどの課題もあります。"
}