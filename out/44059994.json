{
  "comments_id": "44059994",
  "rank": 5,
  "title": "Lisping at JPL (2002)",
  "link": "https://flownet.com/gat/jpl-lisp.html",
  "created_date": "2025-05-25T20:11:48.330392",
  "comments_summary": "## Lisp、宇宙探査、そしてソフトウェアのデバッグについて\n\nこの記事は、宇宙探査におけるLispの使用と、特に遠隔でのソフトウェアのデバッグの課題について議論しています。コメントでは、同様の経験や代替言語、Lispの衰退などが議論されています。\n\n## リモートデバッグの興味深い事例\n\n1億マイル離れた場所にある1億ドルのハードウェアで実行されているプログラムをデバッグするという興味深い話が共有されています。宇宙船上でread-eval-printループを実行することで、問題の発見と修正に非常に役立ちました。同様の経験として、高速道路の下に埋められたハードウェアのデバッグの話が紹介されています。イーサネットが機能しなくなったものの、PoEはまだ動作しており、シリアルラインでブートローダーと通信することで、MACとPHYを直接操作して問題を特定できました。\n\n## 形式検証とモデル検査\n\nLispプログラムからPROMELAモデルを作成する際の労力や、Java PathFinder（JPF）というJavaからPROMELAへの変換器について言及されています。モデル検査は、NASAのファイル転送プロトコルやスペースシャトルの地上管制用データ伝送プロトコルなど、様々なケーススタディに適用されています。\n\n## Lispの代替としてのForth\n\nLispの代替として、Forthが提案されています。Forthはガベージコレクションがなく、'forget'を使用してメモリ管理を行います。実際に、Forthは宇宙アプリケーションで使用されています。また、非常に小さくミニマルなLispとして、zspが紹介されています。\n\n## Lispの衰退\n\nJPLでのLispの衰退は残念であるという意見があり、現代のWeb中心の環境では、Lispのような言語が教えられる機会が減っていることが嘆かれています。ただし、University of Waterlooの卒業生はRacketの経験を持っていることが多いという情報もあります。\n\n## まとめ\n\nこの記事とコメント欄では、Lispが宇宙探査や組み込みシステムなどの分野で非常に有用な言語であったことが示されています。リモートデバッグの興味深い事例や、形式検証によるソフトウェアの信頼性向上への貢献が議論されています。Lispの衰退は残念ですが、一部の大学では依然として教えられており、特定の分野ではその価値が認識されています。"
}