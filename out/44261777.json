{
  "comments_id": "44261777",
  "rank": 1,
  "title": "Frequent reauth doesn't make you more secure",
  "link": "https://tailscale.com/blog/frequent-reath-security",
  "created_date": "2025-06-12T20:13:35.614625",
  "comments_summary": "この記事は、認証における再認証の頻度について議論しています。\n\n## 実装と保守の容易さ\n- セッションクッキーは実装と保守が容易であるため、デフォルトとして使用され続けるでしょう。\n- Appleの開発者サービス（App Store Connectなど）はセッションクッキーを使用していますが、開発者にとって不満の原因となっています。\n\n## セッションクッキーとパーシステントクッキー\n- セッションクッキーはブラウザを閉じると自動的に削除される一時的なデータファイルであり、パーシステントクッキーはセッションを超えて情報を保存できます。\n- 多くのサイトは認証にパーシステントクッキーを使用しています。\n- ブラウザの設定で終了時にクッキーをクリアすることで、マルウェアによるクッキーの盗難を防ぐことができます。\n\n## 再認証の頻度とセキュリティ\n- 頻繁な再認証は、セキュリティ体制を大幅に改善するわけではありません。\n- 認証システムは、有効期限またはユーザー/デバイスによってセッションを無効にする機能を持つべきです。\n- セッションを無効にしてからアクセスがなくなるまでのレイテンシが、再認証の頻度よりも重要です。\n- トークンの更新と認証/認可のタイムアウトを分離することが重要です。\n- リフレッシュトークンを使用することで、ネットワークがダウンした場合でもローカルでの作業を妨げません。\n\n## ユーザーの利便性とセキュリティのバランス\n- 頻繁な再認証は、ユーザーがパスワードを書き留めたり、セキュリティ対策を回避するハックを考え出す原因となります。\n- 企業によっては、ADFS + MFAを介してKeycloakにログインし、10〜15分のトークン有効期間を持つOIDCプロバイダーとしてKeycloakに依存することで、セキュリティと利便性のバランスを取っています。\n- デバイス=同一人物という前提が99%の場合に正しいですが、状況によってはより保守的な仮定をする必要があります。\n\n## まとめ\n再認証の頻度に関する議論は、セキュリティとユーザーエクスペリエンスのバランスを取る必要性を示しています。頻繁な再認証はセキュリティを向上させる可能性がありますが、ユーザーの利便性を損ない、セキュリティ対策を回避するハックを生み出す可能性があります。適切な認証システムは、セッションを無効にする機能を持ち、トークンの更新と認証/認可のタイムアウトを分離することで、セキュリティと利便性のバランスを取る必要があります。"
}