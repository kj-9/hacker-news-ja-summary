{
  "comments_id": "44625292",
  "rank": 1,
  "title": "XMLUI",
  "link": "https://blog.jonudell.net/2025/07/18/introducing-xmlui/",
  "created_date": "2025-07-20T20:13:28.328947",
  "comments_summary": "XMLUI: Visual Basicモデルを現代のWebにもたらす試みについての議論\n\n## XSLTの再考\n\nXMLUIがXSLTに言及していないことに対する意見が飛び交っています。XSLTの専門家からは、XSLTは、XMLデータの処理や変換を行う上で非常に有用であるという意見が出ています。しかし、XSLTは複雑であり、学習コストが高いという意見もあります。また、XSLTのパフォーマンスも考慮すべき点として挙げられています。\n\n## 過去の技術との比較\n\nXMLUIは、XUL、XAML、OpenLaszlo、Adobe Flexなど、過去のXMLベースのUI技術と比較されています。これらの技術は、XMLを使ってUIを記述するという点で共通していますが、それぞれ異なる特徴や欠点がありました。議論の中では、これらの過去の技術の失敗から学び、XMLUIをより良いものにするべきだという意見も出ています。\n\n## 低コード/ノーコードのアプローチ\n\nXMLUIは、ローコード/ノーコードのアプローチであると考えられています。このアプローチは、プログラミングの専門知識がなくてもUIを開発できるという利点がありますが、複雑なUIを開発するには限界があるという意見もあります。また、ローコード/ノーコードのアプローチは、既存のプログラミング言語やフレームワークとの統合が難しいという課題もあります。\n\n## Reactとの統合\n\nXMLUIは、ReactとCSSをラップし、XMLマークアップで構成されたコンポーネントスイートを提供します。しかし、Reactの本来の目的は、immediate mode UIsの開発スタイルをブラウザにもたらすことであり、XMLUIはReactの存在意義を否定しているという意見もあります。また、XMLUIはReactの上に構築されているため、Reactの複雑さを引き継いでしまっているという批判もあります。\n\n## まとめ\n\nXMLUIは、Visual BasicのUI開発モデルを現代のWebにもたらすことを目指したプロジェクトです。しかし、XSLT、XUL、XAML、OpenLaszlo、Adobe Flexなど、過去のXMLベースのUI技術との比較や、Reactとの統合に関する議論など、多くの課題が指摘されています。XMLUIがこれらの課題を解決し、成功を収めることができるかどうかは、今後の開発と普及にかかっています。"
}