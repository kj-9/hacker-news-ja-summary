{
  "comments_id": "43971716",
  "rank": 4,
  "title": "Multiple security issues in GNU Screen",
  "link": "https://www.openwall.com/lists/oss-security/2025/05/12/1",
  "created_date": "2025-05-13T20:13:25.723984",
  "comments_summary": "この記事は、GNU Screenのセキュリティ上の脆弱性について述べています。特に、`setuid-root`ビットが設定された状態でScreenがインストールされている場合に、攻撃対象領域が大幅に増加する可能性があることを指摘しています。この記事では、Screenのマルチユーザー機能が、他のユーザーが所有するScreenセッションにアタッチできることが、この脆弱性の原因であることを説明しています。\n\n## setuid-rootビットのリスク\n\n`ls -l \"$(which screen)\"`を実行した際に`-rwsr-xr-x 1 root root ... /usr/bin/screen`のような結果が返る場合、setuidビットが設定されていることを意味し、Screenバイナリがroot権限で実行されるため、セキュリティリスクが高まります。\n\n## tmuxとの比較\n\ntmuxはUnixドメインソケットを使用しており、setuidアプローチを必要としません。Screenがsetuidアプローチを採用した理由は、コードベースに対する開発者の知識不足が原因である可能性があります。tmuxに移行したユーザーも多く、Screenのキーバインドに慣れているユーザーはtmuxの設定を変更して対応しています。\n\n## Screenの歴史的背景と現代的な代替案\n\nScreenは1987年の初期バージョンから多くのアーキテクチャ上の問題を抱えており、setuidもその一つです。現代的な代替案としてtmuxやzellijが挙げられており、特にzellijはよりモダンで人間工学的なデフォルト設定が評価されています。また、emacsのTRAMPモードを使用することで、screen/tmuxを必要としなくなるユーザーもいます。\n\n## メーリングリストの利用\n\nメーリングリストは、非プロプライエタリで、連合的で、アーカイブ可能で、アクセス可能で、特定の企業に依存しないコミュニケーション手段として、2025年においても重要な役割を果たしています。しかし、ユーザビリティやアクセシビリティの問題も指摘されています。\n\n## まとめ\n\nGNU Screenのセキュリティ脆弱性は、特にsetuid-rootビットの設定に起因するものであり、tmuxやzellijなどの代替案が存在します。Screenの歴史的な背景や開発状況を考慮すると、これらの代替案への移行が推奨される場合があります。また、メーリングリストは依然として重要なコミュニケーション手段ですが、ユーザビリティの改善が求められています。"
}