{
  "comments_id": "44502318",
  "rank": 4,
  "title": "Supabase MCP can leak an entire SQL Database, a lethal trifecta attack",
  "link": "https://simonwillison.net/2025/Jul/6/supabase-mcp-lethal-trifecta/",
  "created_date": "2025-07-08T20:13:36.328904",
  "comments_summary": "このHacker Newsのスレッドは、Supabase MCPの脆弱性とLLMにおけるプロンプトインジェクション攻撃の危険性について議論しています。\n\n## セキュリティの脆弱性\n\nSupabase MCP（マネージドコンピューティングプラットフォーム）のようなシステムにおける深刻な脆弱性が議論されています。特に、攻撃者がサポートチケットを悪用してAIエージェントにデータベースから情報を読み取らせ、それをチケットに書き戻させることでデータを盗み出すケースが取り上げられています。同様の脆弱性がNeon DB MCPやAIメールクライアントでも見つかっています。\n\n## プロンプトインジェクションの脅威\n\nLLM（大規模言語モデル）は、ユーザーからの指示と悪意のあるテキストを区別できないため、プロンプトインジェクション攻撃に対して脆弱です。これはSQLインジェクションに似ていますが、LLMにはSQLインジェクションのような明確な対策が存在しません。ユーザーが生成したデータをLLMに接続し、それがデータベースにアクセスできる場合、セキュリティ上のリスクが高まります。\n\n## 緩和策と対策\n\nSupabaseは、読み取り専用アクセスを推奨し、SQLの応答をプロンプトで囲んでLLMが悪意のある指示に従わないようにするなどの緩和策を講じています。しかし、これらの対策は完全ではなく、プロンプトインジェクションは未解決の問題です。より細かい権限管理や、プロンプトインジェクションの試みを検出するモデルの追加も検討されています。\n\n## 結論\n\nSupabase MCPの脆弱性は、LLMを使用するシステムにおけるプロンプトインジェクション攻撃の危険性を浮き彫りにしています。ユーザー入力を適切にサニタイズし、LLMのアクセス権を制限することが重要ですが、完全な解決策はまだ存在しません。開発者は、セキュリティを最優先に考え、多層防御のアプローチを採用する必要があります。"
}