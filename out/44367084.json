{
  "comments_id": "44367084",
  "rank": 2,
  "title": "Writing toy software is a joy",
  "link": "https://blog.jsbarretto.com/post/software-is-joy",
  "created_date": "2025-06-24T20:13:47.125024",
  "comments_summary": "この記事は、ソフトウェア開発における楽しみを取り戻すために、簡単な「おもちゃ」プログラムを作成することを提案しています。AIがソフトウェア開発の喜びを奪い、開発が商品化されているという懸念が表明されています。\n\n## ソフトウェア開発における喜び\nソフトウェア開発は楽しく、創造的なものであるべきという意見があります。特に、LLMを使用することで、アーキテクチャやコンポーネントを考え、新しいエキサイティングなものを作成することに喜びを感じる人にとっては、おもちゃのソフトウェアを開発することが楽しいという意見があります。一方で、LLMは常に手助けが必要で、質の低いコードを大量に生成するため、良いゴム製のアヒルにしかならないという意見もあります。コードは悪いものであり、最小限に抑えるべきだという考え方もあります。\n\n## 個人的なプロジェクトの価値\n個人的なプロジェクトは、新しい言語やフレームワークを学ぶ上で非常に有益であることが示唆されています。制約がないとプロジェクトが肥大化する傾向があるため、1週間ごとにプロジェクトを完了させるという制約を設けることで、自信を高め、プログラミングの楽しさを再認識できます。また、AIツールを利用することで、特にフロントエンドの作業を効率化し、個人的なプロジェクトをより取り組みやすくすることができます。\n\n## LLMの活用\nLLMは、学習ツールとして非常に役立つ可能性があります。特に、ELFの概要など、高度な抽象化に焦点を当てた質問をすることで、学習プロセスを加速できます。ただし、LLMを使用する際には注意が必要であり、知識を鵜呑みにするのではなく、批判的に考える必要があります。LLMは、教師として活用することで、プロセスを導き、必要な知識の源を見つけるのに役立ちます。\n\n## 既存のソフトウェアの再発明\n既存のソフトウェアを再発明することは、学習の手段として非常に価値があるという意見があります。既存のものがどのように動作するかを知らなければ、新しいものを発明することはできません。また、改善されたバリアントやイノベーションは、既存のものをベースにすることで可能になります。\n\n## おもちゃのプロジェクトからの学び\nおもちゃのプロジェクトは、Kubernetesクラスタをマルチリージョン、マルチクラウドに展開するなど、実用的な知識を得るための優れた方法です。また、Raftベースのデータベースを作成するなど、楽しみながら多くのことを学べます。これらのプロジェクトは、必ずしも実用的ではありませんが、知識の習得には非常に役立ちます。\n\n## まとめ\nソフトウェア開発における楽しみを取り戻すために、おもちゃのプログラムを作成することは、創造性を発揮し、新しいスキルを習得するための有効な手段です。LLMを活用することで、学習プロセスを加速できますが、批判的に考えることが重要です。既存のソフトウェアを再発明することは、学習の手段として非常に価値があり、個人的なプロジェクトは、新しい言語やフレームワークを学ぶ上で非常に有益です。"
}