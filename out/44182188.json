{
  "comments_id": "44182188",
  "rank": 10,
  "title": "The Prompt Engineering Playbook for Programmers",
  "link": "https://addyo.substack.com/p/the-prompt-engineering-playbook-for",
  "created_date": "2025-06-04T20:10:28.647865",
  "comments_summary": "この記事は、大規模言語モデル（LLM）を効果的に使用するためのプロンプトの作成方法について解説しています。\n\n## プロンプトの主観性\n\nLLMへのプロンプトの作成は主観的であり、プロンプトの表現方法によって異なる回答が得られるという意見があります。LLMは非決定論的であるため、詳細なプロンプトを作成しても必ずしも良い結果が得られるとは限りません。また、LLMのリリースごとにプロンプトの書き方が変わる可能性があり、APIやプログラミング言語のリリースのような一貫性は保証されません。\n\n## プロンプトの複雑さ\n\nLLMを使用する際には、長くて複雑なプロンプトを作成するよりも、シンプルで最小限のプロンプトを作成し、何度か繰り返して調整する方が効果的な場合があります。冗長なプロンプトはモデルの認知能力を低下させる可能性があり、プロンプトの特定の部分を参照した応答を生成してしまうことがあります。\n\n## プロンプトのヒント\n\nLLMにコーディングさせる際には、コーディングスタイルガイドを含めると、望ましいコードに近づけることができます。プロジェクト構造やコードベース全体の設計に関する説明も役立ちます。また、使用するライブラリを指定することで、LLMが不要なライブラリを導入したり、既存の機能を再実装したりするのを防ぐことができます。LLMにコードのレビューをさせ、修正を繰り返すことで、コードの品質を向上させることができます。\n\n## エージェントツールの利用\n\nエージェントツールを使用すると、コードの変更後にテストを実行し、テストが成功するまで問題を修正することができます。ただし、エージェントツールはトークンを大量に消費するため、使用には注意が必要です。\n\n## まとめ\n\nLLMを効果的に使用するためには、プロンプトの作成方法を理解し、目的に応じて適切なプロンプトを作成する必要があります。LLMは非決定論的であるため、試行錯誤を繰り返しながら、最適なプロンプトを見つけることが重要です。また、エージェントツールなどの便利なツールもありますが、コストも考慮して利用する必要があります。"
}