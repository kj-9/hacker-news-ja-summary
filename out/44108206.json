{
  "comments_id": "44108206",
  "rank": 5,
  "title": "Launch HN: Relace (YC W23) – Models for fast and reliable codegen",
  "link": "https://news.ycombinator.com/item?id=44108206",
  "created_date": "2025-05-27T20:13:29.185045",
  "comments_summary": "Relaceの創業者であるPrestonとEitanが、コードエージェントの構築を容易かつ安価にすることを目指しているRelace（https://relace.ai）を紹介しています。彼らは、信頼性の高いコードエージェントを構築する上で重要な課題である、diffの確実な適用とコードベースのコンテキスト管理に焦点を当てています。Relaceのモデルは、高速な適用と効率的な検索を提供し、コストとレイテンシを削減します。\n\n## 高性能とコスト効率\\n\n\nRelaceは、ClaudeやGPTなどの大規模モデルよりもタスクを絞り込み、入力と出力の両方のトークン数を削減することで、コスト効率を高めています。Relaceのmerge + retrievalモデルは、より小さなLLMを使用することで、Sonnetに過剰なコンテキストを渡す必要性を減らし、出力トークン数を削減します。これにより、精度を維持または向上させながら、実行コストを抑えることができます。\n\n## コンテキスト管理と検索\\n\n\nRelaceの検索モデルは、大規模なコードベースから関連性の高いファイルのみを効率的に取得します。これにより、入力トークンのコストを削減し、コードエージェントがファイルを閲覧する回数を減らすことができます。Relaceのrerankerは、数百万行のコードベースを約1〜2秒でスキャンでき、埋め込みモデルはTypescript/Reactリポジトリのコーパスで他の埋め込みモデルよりも優れた性能を発揮します。\n\n## 適用モデルの利点\\n\n\nRelaceのFast Applyモデルは、コードスニペットをファイルに4300 tok/sでマージします。このモデルは、マージエラーの点で、Sonnet、Qwen、Llamaなどの他のモデルよりも信頼性が高く、各ファイルの処理に約900msしかかかりません。これにより、ユーザーエクスペリエンスが向上し、Claude 4の出力トークンコストを約40%削減できます。\n\n## まとめ\\n\n\nRelaceは、コードエージェントの構築を容易かつ安価にすることを目指しており、diffの確実な適用とコードベースのコンテキスト管理という重要な課題に取り組んでいます。Relaceのモデルは、高速な適用と効率的な検索を提供し、コストとレイテンシを削減します。これにより、開発者はより効率的にコードを生成し、管理できるようになります。"
}