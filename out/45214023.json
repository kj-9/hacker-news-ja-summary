{
  "comments_id": "45214023",
  "rank": 2,
  "title": "Native ACME support comes to Nginx",
  "link": "https://letsencrypt.org/2025/09/11/native-acme-for-nginx",
  "created_date": "2025-09-11T20:10:30.920463",
  "comments_summary": "nginx が ACME (自動証明書管理環境) をネイティブにサポートするようになったことについての Hacker News の議論の要約です。これにより、TLS 証明書を自動的に取得および更新できます。\n\n## ACME の実装\n\n人々は、nginxがACMEサポートを追加するのに時間がかかったのはなぜなのか疑問に思っています。企業顧客のACMEの採用が遅いことや、実装が難しいことなどが理由として挙げられています。\n\n## certbotなどの代替手段との比較\n\nnginxのACMEサポートと、certbotやcert-managerなどの既存のツールを比較する人がいます。nginxにACMEを組み込むことで、インストール、設定、監視する必要のあるプログラムが1つ減るという意見があります。ただし、モジュールを別途インストールする必要があるため、利便性は低いという意見もあります。\n\n## nginxの所有権と開発の遅さ\n\nnginxがF5に買収されたことで、開発速度が遅くなっているという指摘があります。代替手段として、HAProxyやCaddyが挙げられています。Caddyは、ACMEサポートが組み込まれているため、特に高く評価されています。\n\n## Rustの使用\n\nnginxのACMEモジュールがRustで実装されていることについて議論があります。Rustはメモリ安全な言語であると宣伝されていますが、コードにはunsafeブロックが多数含まれているという指摘があります。unsafe RustはCよりも安全であるという意見もありますが、unsafeコードはコードベース全体に影響を与えるという意見もあります。\n\n## ACMEクライアントの重複\n\nアプリケーションごとに独自のACMEクライアントを組み込む傾向について議論があります。ACMEクライアントは、専用のツールとして提供されるべきであるという意見があります。一方、nginxのように広く使用されているソフトウェアでは、ACMEクライアントを組み込むことは理にかなっているという意見もあります。システムレベルでACMEクライアントを提供することを提案する人もいます。\n\n## まとめ\n\nnginxがACMEをネイティブにサポートするようになったことは、TLS証明書の管理を簡素化する上で大きな進歩です。ただし、実装方法、既存のツールとの比較、依存関係の管理など、議論すべき点はいくつかあります。全体として、この機能は、nginxユーザーにとって有益な追加機能であると考えられています。"
}