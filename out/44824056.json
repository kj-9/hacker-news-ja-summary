{
  "comments_id": "44824056",
  "rank": 9,
  "title": "Infinite Pixels",
  "link": "https://meyerweb.com/eric/thoughts/2025/08/07/infinite-pixels/",
  "created_date": "2025-08-07T20:14:09.350815",
  "comments_summary": "この記事は、CSSにおける`infinity`値の使用に関する実験と、ブラウザごとの高さ制限について議論しています。\n\n## CSSハックとブラウザの歴史\n\n昔はCSSハックが必要だったが、現代のCSSは改善された。IE5、IE6、Firefox、Netscapeで異なるスタイルを適用するCSSスニペットのインタビューの質問は、CSSがもはや冒険ではないことを示している。\n\n## 無限大（Infinity）とブラウザの挙動\n\nBlinkとWebKitは`infinity`値のサポートを共有している可能性が高い。CSSの`infinity`キーワードはJavaScriptの`Infinity`とは異なり、ブラウザは非常に大きなheightの宣言を無視またはクランプする。Firefoxは特定の高さの宣言を無視するが、WebKit系のブラウザはクランプする。\n\n## 大規模データとレンダリングの課題\n\n20億行の制限があるブラウザベースのスプレッドシートでは、初期にセルごとにdivを使用したが、ドキュメントの高さ制限に遭遇した。Canvasでのレンダリングとカスタムスクロールバーの実装が解決策となった。スクロールバーの動作やパフォーマンスに関する最適化の議論も行われている。\n\n## 執筆スタイルとユーモア\n\n記事の執筆スタイルは独特で、ソフトウェアエンジニアリングにおける「演劇少年」に例えられている。\n\n## CSSにおける`infinity`のユースケース\n\n`infinity`は、丸いボーダーや最大値を表現するために使用される。シリアライズを単純化し、意図を明確にするために役立つ。\n\n## ブラウザの高さ制限の詳細\n\nFirefoxは特定の高さの宣言を無視するが、これは2^30 sixtieths of a pixelに近い値である。WebKit系のブラウザは異なるレイアウト単位を使用し、IEは以前、より低い制限を持っていた。\n\n## レイアウトエンジンと浮動小数点数の精度\n\nレイアウトには通常、固定小数点数が使用される。32ビット浮動小数点数の精度に関連する議論もある。\n\n## まとめ\n\nこの記事では、CSSの`infinity`値の実験と、ブラウザごとの高さ制限について掘り下げています。歴史的なCSSハックから、大規模データのレンダリングの課題、そして`infinity`の具体的なユースケースまで、幅広いトピックが議論されています。"
}