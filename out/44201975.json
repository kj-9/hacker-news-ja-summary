{
  "comments_id": "44201975",
  "rank": 2,
  "title": "How we decreased GitLab repo backup times from 48 hours to 41 minutes",
  "link": "https://about.gitlab.com/blog/2025/06/05/how-we-decreased-gitlab-repo-backup-times-from-48-hours-to-41-minutes/",
  "created_date": "2025-06-06T20:13:56.410551",
  "comments_summary": "GitLabがGitのバックアップ時間を短縮するために、15年前の関数にあったO(N^2)の複雑性を修正したという記事です。\n\n## O(N^2)の複雑性\n\nO(N^2)の複雑性は、最初は問題ないように見えるものの、データ量が増加すると問題を引き起こすため、やっかいなものです。多くの人が、O(N^2)の複雑性を避けることが重要であることに同意しています。これは「Dawsonの第一法則」として知られています。\n\n## Gitの再実装\n\nGitの再実装はいくつか存在します。gitoxide、got(Game of Trees)、jgit、Haskell gitパッケージなどがあります。\n\n## 指摘された問題点\n\n記事では「指数関数的にバックアップ時間を短縮した」と述べていますが、これは数学的に正確ではありません。より正確には「劇的に」と言うべきでしょう。また、記事では重複排除に「strset」を使用しているにもかかわらず、「map」を使用していると記述しています。\n\n## スナップショットの代替案\n\nZFSスナップショットなどのファイルシステムコピーを使用する方が、Gitコマンドを使用するよりも効率的であると指摘する人がいます。ただし、ZFSスナップショットをオフサイトに複製するのは難しい場合があります。また`git clone --bundle-uri`を使用すると、クライアントはバンドルをダウンロードして解凍し、Gitサーバー経由で差分を更新できるため、大規模なリポジトリのクローン作成が高速になります。\n\n## まとめ\n\nGitLabはGitのバックアップ時間を短縮するために、15年前の関数にあったO(N^2)の複雑性を修正しました。この修正は、Gitのv2.50.0でリリースされる予定です。O(N^2)の複雑性は、最初は問題ないように見えるものの、データ量が増加すると問題を引き起こすため、注意が必要です。"
}