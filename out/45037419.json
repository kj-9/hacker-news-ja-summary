{
  "comments_id": "45037419",
  "rank": 4,
  "title": "Lisp from Nothing, Second Edition",
  "link": "http://t3x.org/lfn/index.html",
  "created_date": "2025-08-29T20:12:27.117035",
  "comments_summary": "## Church numeralsに関するHacker Newsのコメントの要約\n\nこのコメントスレッドは、Church numeralsとLISPプログラミング言語に関する議論です。特に、LISPにおける括弧の使用、Church numeralsの実装効率、およびLISPとlambda計算の関係に焦点が当てられています。\n\n## LISPの括弧問題\n\n*   gritzkoは、CRDTデータベースのスクリプトにLISPを再発明した経験を共有し、LISPの括弧表記に苦労したことを述べています。彼は、括弧を減らすために異なるタプル表記を試みていることを説明し、過去にLISPerが括弧を取り除く試みがあったかどうか尋ねています。\n*   drob518は、LISPの発明者であるJohn McCarthy自身も括弧のない構文を検討していたが、実現しなかったと指摘。LISPのsexpr（記号式）は、実は利点として認識されていると説明しています。ClojureやRacketといったLISP方言が、コードを簡潔にするために角括弧や波括弧を採用している例を挙げ、括弧のないLISPの例としてDylanを紹介しています。\n*   bryanlarsenは、「sweet expressions lisp」で検索すると、多くの実装と意見が見つかるとアドバイスしています。\n*   tmtvlは、括弧を取り除く試みは過去に何度もあったが、定着しなかったと述べています。\n\n## Church numeralsの実装効率\n\n*   trompは、提供されたzipファイル内の`church.scm`ファイルを見て、リストを構築するために使用される関数が、リスト要素ごとに2つの追加のブール値を使用していることを指摘しています。彼は、nilを認識するためのブール値は不要であると提案し、より効率的な実装方法を示唆しています。\n*   nils-m-holmは、trompの提案に対して、`(ATOM NIL)`がTRUEでもFALSEでもなくなる点を指摘しています。\n\n## LISPとlambda計算の関係\n\n*   nils-m-holmは、LISPにおける環境は実装の詳細であり、lambda計算には環境が必要ないと説明。lambda計算は、字句的にスコープされたLISPのLAMBDAと等しいと述べています。また、LISPはLC（lambda計算）にいくつかの追加関数を加えたものと見なすことができると述べています。\n\n## まとめ\n\nこのスレッドでは、LISPの括弧表記の課題、Church numeralsの効率的な実装、そしてLISPとlambda計算の理論的な関係について議論されました。参加者は、過去の試みや代替構文、実装の最適化、および言語の理論的基盤について意見を交換しました。"
}