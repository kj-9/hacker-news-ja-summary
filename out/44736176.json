{
  "comments_id": "44736176",
  "rank": 4,
  "title": "Crush: Glamourous AI coding agent for your favourite terminal",
  "link": "https://github.com/charmbracelet/crush",
  "created_date": "2025-07-30T20:12:52.696803",
  "comments_summary": "このHacker Newsのスレッドは、Charmbraceletによって作成された新しいターミナルベースのAIコーディングエージェントであるCrushについて議論しています。\n\n## ツール比較と評価\n\n市販のモデルの評価は非常に高価であり、大学や小規模な研究所に負担をかけています。学術研究では、アーキテクチャ、エンジニアリングスタック、トレーニングデータに関する正確な情報がない限り、市販のモデルとの比較を控えるべきです。ツールのパフォーマンスは、モデル、コードベース、タスクによって異なり、これらの要因は独立していません。\n\n## OpenCodeとの比較\n\nOpenCodeは元々Opencode-aiという名前でしたが、開発者間の不和の後、名前が変更されました。OpenCodeの大きな利点の1つは、GitHub Copilotへの認証を可能にし、Copilotがサポートするさまざまなモデルを切り替えることができることです。\n\n## ターミナルエージェントの人気の理由\n\nターミナルエージェントは、さまざまなエディターや環境との統合が容易であり、軽量で開発環境のコンテキストに忠実です。GUIは多くのことに優れていますが、ターミナルUIは情報密度が高く、マウスもサポートしています。\n\n## ローカルモデルのサポート\n\n新しいエージェントのうち、どれがローカルモデルを合理的な程度に消費できるかという大きな疑問があります。外部APIへの依存をなくし、パフォーマンスをトレードオフしたいという要望があります。CrushはOllamaのサポートを追加する予定であり、OpenCodeもローカルモデルをサポートしています。\n\n## UIとUX\n\nCrushのUIは美しく、他のコーディングエージェントよりも使いやすいと感じるユーザーもいます。ただし、キーバインド、タブ補完、一貫したスクロールバックなどの基本的な機能が不足しているという批判もあります。\n\n## まとめ\n\nCrushは、美しいターミナルインターフェースを備えた有望なAIコーディングエージェントです。他のツールと比較して初期段階にありますが、ローカルモデルのサポート、LSP統合、使いやすいUIなどの潜在的な利点があります。"
}