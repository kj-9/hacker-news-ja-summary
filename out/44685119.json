{
  "comments_id": "44685119",
  "rank": 4,
  "title": "Why MIT switched from Scheme to Python (2009)",
  "link": "https://www.wisdomandwonder.com/link/2110/why-mit-switched-from-scheme-to-python",
  "created_date": "2025-07-25T20:13:36.507750",
  "comments_summary": "この記事は、MITがコンピュータサイエンスの入門コースでSchemeからPythonに切り替えた理由について議論しています。\n\n## Schemeの利点\\n\n\n多くの人が、Schemeは習得しやすく、コンピュータサイエンスの原則を教えるのに優れていると考えています。SICP（Structure and Interpretation of Computer Programs）を使用すると、Scheme内でSchemeを書き換え、問題を解決するためにインタープリターに微積分を教えることができます。Schemeは、ループが再帰によって実行できることや、副作用が何かを理解するなど、コンピュータサイエンスへの愛情を深めるのに役立ちます。\n\n## Pythonの利点\\n\n\nPythonは、ロボットインターフェース用のライブラリが既に実装されているなど、エコシステムが充実しているため、より実用的です。Pythonは構文が読みやすく、Javaよりも擬似コードに近いため、学習に適しています。Pythonは、さまざまな分野でコードを書くための最も一般的な方法の1つであり、コンピュータサイエンス以外の分野にも応用できるため、コンピュータサイエンスを専攻しない人にも役立ちます。\n\n## カリキュラムの変化\\n\n\nMITのEECS（電気工学・コンピュータサイエンス）のカリキュラムは、1980年代に4つの「深い掘り下げ」から始まりましたが、2000年代半ばに2つのサーベイコースに変更されました。これは、EECSへの入学者が減少し、EECSがより幅広い分野に応用できるようになったためです。新しいコースは、ロボット工学、制御、センシング、統計、確率推論など、EECSのさまざまな分野を紹介することを目的としていました。\n\n## 大学の役割\\n\n\n大学は、コンピュータサイエンスを教えるだけでなく、コンピュータエンジニアリングを教えるようになっているという意見があります。これは、大学がより職業訓練的になっているという一般的な傾向の一部です。しかし、大学は単に大企業のための職業訓練プログラムとして存在するべきではないという意見もあります。\n\n## まとめ\\n\n\nMITがコンピュータサイエンスの入門コースでSchemeからPythonに切り替えた理由は、Schemeがコンピュータサイエンスの原則を教えるのに優れている一方で、Pythonはより実用的であり、さまざまな分野に応用できるためです。カリキュラムの変化は、EECSへの入学者が減少し、EECSがより幅広い分野に応用できるようになったためでもあります。大学の役割は、コンピュータサイエンスを教えるだけでなく、コンピュータエンジニアリングを教えるようになっているという意見もあります。"
}