{
  "comments_id": "45138695",
  "rank": 10,
  "title": "The key points of \"Working Effectively with Legacy Code\"",
  "link": "https://understandlegacycode.com/blog/key-points-of-working-effectively-with-legacy-code/",
  "created_date": "2025-09-08T20:12:32.120159",
  "comments_summary": "コメントは、Michael Feathersによる「Working Effectively with Legacy Code」という書籍についての議論です。\n\n## レガシーコードの定義\n\n*   未テストのコードがレガシーコードであるという本の中心的な考え方に同意する人がいます。\n*   一方で、既存のコードに機能を追加する場合、既存のコードベースのテストを書く責任を感じるべきかどうかという疑問も提起されています。\n\n## 本の内容\n\n*   本の最初の数章には、大規模なコードベースでかなりの時間を費やした人なら共感できるような、非常に鋭い洞察が満載であるという意見があります。\n*   本の後半の内容は、コードをリファクタリングおよび書き換えるための明らかな戦略を命名および説明することに費やされているという意見があります。\n*   後半は、ジュニアエンジニアや中堅エンジニアに例を示すための参考資料として役立つという意見があります。\n\n## コードの信頼性\n\n*   既存の機能と新しい機能の目標は信頼性であると述べられています。\n*   LLMはテストの作成に非常に役立ち、AIはどれほど複雑であっても、ほとんどのコードが何をしているかを説明できると述べられています。\n\n## まとめ\n\n全体として、この本の有用性については意見が分かれています。中心的な考え方には同意する人が多いものの、後半の内容については冗長であると感じる人もいます。また、レガシーコードの定義や、既存のコードベースのテストを書く責任についても議論されています。"
}