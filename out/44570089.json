{
  "comments_id": "44570089",
  "rank": 10,
  "title": "How to Get Foreign Keys Horribly Wrong",
  "link": "https://hakibenita.com/django-foreign-keys",
  "created_date": "2025-07-18T20:13:52.670171",
  "comments_summary": "Django ORMにおけるForeignKeyのインデックスに関する議論\n\n## DjangoのForeignKeyインデックスの自動生成\n\nDjangoはForeignKeyフィールドに暗黙的にインデックスを追加するが、PostgresやSQLAlchemyでは自動的に行われない点が指摘されています。\n\n## 制約インデックスの利用\n\n制約インデックスで特定のインデックスを代替できるかの判断方法についての質問が出ています。例えば、ForeignKeyがunique togetherの最初のフィールドである必要があるかなど。\n\n## ORMに対する批判と代替案\n\nORMが生成するテーブルやインデックスが意図したとおりであるかを確認するために、生成されたスクリプトを読む必要があるという意見が出ています。\nより直接的なSQL実行を可能にするliquibaseのようなmigrationサービスの利用を提案し、ORMの自動migration生成機能は必須ではないという意見が出ています。\nデータベースmigrationライブラリをORMなしで使用するアプローチが支持されており、データ損失防止の観点からmigrationツールの重要性が強調されています。\n\n## まとめ\n\nこの議論では、DjangoのORMにおけるForeignKeyインデックスの自動生成の注意点から、ORMの自動migration機能に対する批判、そしてliquibaseのような代替migrationサービスの提案まで、幅広い意見が交わされました。参加者は、ORMの利便性と、より直接的なSQL管理の必要性との間でトレードオフを検討しています。"
}