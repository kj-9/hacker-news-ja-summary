{
  "comments_id": "44953032",
  "rank": 2,
  "title": "How we exploited CodeRabbit: From simple PR to RCE and write access on 1M repos",
  "link": "https://research.kudelskisecurity.com/2025/08/19/how-we-exploited-coderabbit-from-a-simple-pr-to-rce-and-write-access-on-1m-repositories/",
  "created_date": "2025-08-19T20:13:23.061735",
  "comments_summary": "CodeRabbitの脆弱性とそれに対する対応についてのHacker Newsのコメントです。ある研究者がCodeRabbitのシステムに存在するリモートコード実行（RCE）の脆弱性を発見し、それを悪用してGitHubアプリの秘密鍵を取得できることを報告しました。\n\n## 環境変数の管理とAPIキーの安全性\n\n多くの人が、CodeRabbitがAPIキーを環境変数に保存していたことに対する懸念を表明しています。GitHub自身がドキュメントで環境変数でのキーの保存を推奨していないにも関わらずです。APIキーを環境変数に保存するのではなく、より安全な方法（HSMやキーVaultなど）を使用するべきだったという意見が出ています。\n\n## 隔離メカニズムとサンドボックス化\n\nCodeRabbitがRubocopを隔離メカニズム内で実行していなかったことが問題視されています。Dockerコンテナなどの隔離技術を使用していたにもかかわらず、一部のツールが適切にサンドボックス化されていなかったようです。脆弱性が悪用されたツールがサンドボックス化されていなかったのは、単なる偶然だったという指摘もあります。\n\n## GitHubアプリの権限とセキュリティ\n\nCodeRabbitがGitHubリポジトリへの書き込みアクセス権を必要とすることに対する疑問も提起されています。テストの追加や修正の提案のために書き込みアクセスが必要であるものの、それがセキュリティリスクを高める可能性があるという懸念があります。リポジトリへの書き込み権限をより細かく制御できるような仕組みがGitHubに求められています。\n\n## 脆弱性の報告と対応\n\nCodeRabbitの担当者がコメントで、RCEの脆弱性は既に報告され修正済みであり、顧客データへの影響はなかったと述べています。また、現在ではすべての実行コードに対して広範なサンドボックス化を行っていると説明しています。しかし、修正前に秘密鍵が漏洩していなかったか、バックドアが仕掛けられていないかなど、CodeRabbitの説明に対する疑念も表明されています。\n\n## まとめ\n\nCodeRabbitの脆弱性は、環境変数の不適切な管理、サンドボックス化の不備、GitHubアプリの過剰な権限など、複数のセキュリティ上の問題が組み合わさって発生しました。この問題を迅速に修正し、セキュリティ対策を強化したことは評価できますが、初期のセキュリティ設計の甘さや、脆弱性に関する情報公開の不足に対する批判も多く見られます。"
}