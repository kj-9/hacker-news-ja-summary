{
  "comments_id": "44840693",
  "rank": 4,
  "title": "Build durable workflows with Postgres",
  "link": "https://www.dbos.dev/blog/why-postgres-durable-execution",
  "created_date": "2025-08-08T20:13:45.654057",
  "comments_summary": "これは、Postgresでのワークフローに関するHacker Newsのスレッドです。\n\n## pgflow\n\ncpursleyは、pgmq上に構築されたワークフローにhttps://www.pgflow.devを使用しており、非常に感銘を受けていると述べています。彼はロジックのほとんどがデータベースにあるため、ElixirアダプターDSLの構築を検討しています。ishita_julepはDSLを何に使用するのか尋ねました。\n\n## 正確に1回の保証\n\ntonyhbは、正確に1回を保証するものはすべて蛇の油を売っていると述べています。副作用はトランザクション内で発生し、コミット（チェックポイント）された場合にのみ副作用は安全です。彼は、ブログ記事がこれらのタイプのシステムの機能を全体として売りすぎていると述べています。彼は、DBOS（およびInngest）ができるだけ正確に1回に近づこうとしますが、リスクは常に存在するため、外部APIリクエストでべき等性を使用するように努める必要があると述べています。KraftyOneは、正確に1回の保証は、データベース操作を実行するステップに対してのみ有効であると述べています。これらの場合、耐久性のあるチェックポイントと同じPostgresトランザクションでデータベース操作を実行することにより、正確に1回の保証を得ることができます。\n\n## 選択肢\n\nabtinfは、Temporalを使用しない理由を尋ねました。at0mic22は、数年ごとに誰かがFOR UPDATE SKIP LOCKEDを発見して再現すると述べています。\n\n## まとめ\n\nこのスレッドでは、Postgresでのワークフローについて議論しています。いくつかの異なるアプローチが議論されており、それぞれに長所と短所があります。正確に1回の保証を提供するシステムの制限と、外部APIリクエストでべき等性を使用することの重要性についても議論されています。"
}